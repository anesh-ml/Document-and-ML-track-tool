'use strict';
define([
    'base/js/namespace',
    'base/js/events'
], function (Jupyter, events) {

    // Adds a cell above current cell (will be top if no cells)

    var add_cell = function () {
        Jupyter.notebook.
            insert_cell_above('code').
            // Define default cell here
            set_text(`inspector = utils.save_file(get_ipython())

values=inspector.get_value()`)
        Jupyter.notebook.select_prev();
        let selected_cell = Jupyter.notebook.get_selected_cell();
        selected_cell.execute();
        selected_cell.set_text("");
        Jupyter.notebook.select_next();
        console.log("moving next line")
        let input_cell = Jupyter.notebook.get_selected_cell();
        let user_input = input_cell.get_text();
        let len_user_input = 0
        var loop_func = async function loop1() {
            while (len_user_input != 2) {
                len_user_input = user_input.split(",").length;

            }
            Jupyter.notebook.
                insert_cell_above('code').
                // Define default cell here
                set_text(`variable,file=var.value.split(",")
out=[eval(x) for x in values if  ((type(eval(x)).__name__=="DataFrame")&(x==variable)) ]
ins.save_data(out[0])`)
            Jupyter.notebook.select_prev()
            Jupyter.notebook.execute_cell_and_select_below()

        }

        console.log("got user input")



    }
    // Button to add default cell
    var defaultCellButton = function () {
        Jupyter.toolbar.add_buttons_group([
            Jupyter.keyboard_manager.actions.register({
                'help': 'Add default cell',
                'icon': 'fa-play-circle',
                'handler': add_cell
            }, 'add-default-cell', 'Default cell')
        ])
    }
    // Run on start
    function load_ipython_extension() {
        // Add a default cell if there are no cells

        defaultCellButton();
    }
    return {
        load_ipython_extension: load_ipython_extension
    };
});